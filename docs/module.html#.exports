<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>JSDoc: Class: exports</title>

    <script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="main">

    <h1 class="page-title">Class: exports</h1>

    




<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">An argument result.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#ArgumentResultOptions">ArgumentResultOptions</a></span>


            
            </td>

            

            

            <td class="description last">The argument result options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed arguments.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line26">line 26</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Result</li>
    </ul>


    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A command result.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#CommandResultOptions">CommandResultOptions</a></span>


            
            </td>

            

            

            <td class="description last">The command result options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line26">line 26</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Result</li>
    </ul>


    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A cooldown result.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#CooldownResultOptions">CooldownResultOptions</a></span>


            
            </td>

            

            

            <td class="description last">The cooldown result options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line26">line 26</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Result</li>
    </ul>


    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">An exception result.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#ExceptionResultOptions">ExceptionResultOptions</a></span>


            
            </td>

            

            

            <td class="description last">The exception result options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line26">line 26</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Result</li>
    </ul>


    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">An invalid context result.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#InvalidContextResultOptions">InvalidContextResultOptions</a></span>


            
            </td>

            

            

            <td class="description last">The invalid context result
options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Result</li>
    </ul>


    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A permission result.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#PermissionResultOptions">PermissionResultOptions</a></span>


            
            </td>

            

            

            <td class="description last">The permission result options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line28">line 28</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Result</li>
    </ul>


    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">()</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A precondition result.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">()</span><span class="type-signature"></span></h4>
    

    















<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Result</li>
    </ul>


    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A result.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#ResultOptions">ResultOptions</a></span>


            
            </td>

            

            

            <td class="description last">The result options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>success</code></td>
            

            <td class="type">
            
                
<span class="param-type">boolean</span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">Whether or not the command execution was successful.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                
                </td>
            

            

            <td class="description last">The executed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                
                </td>
            

            

            <td class="description last">The parsed command name.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>commandError</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandError</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                
                </td>
            

            

            <td class="description last">The command error.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>errorReason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                
                </td>
            

            

            <td class="description last">The reason for the failed execution.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line26">line 26</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A type reader result.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#TypeReaderResultOptions">TypeReaderResultOptions</a></span>


            
            </td>

            

            

            <td class="description last">The type reader result options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                
                </td>
            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    
        <h3 class="subsection-title">Extends</h3>

        


    <ul>
        <li>Result</li>
    </ul>


    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A command argument.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#ArgumentOptions">ArgumentOptions</a></span>


            
            </td>

            

            

            <td class="description last">The argument options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>defaultValue</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's default value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>example</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The argument's example.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>infinite</code></td>
            

            <td class="type">
            
                
<span class="param-type">boolean</span>


            
            </td>

            

            

            <td class="description last">Allow the argument to accept an infinite number of
values and return them in an array.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>key</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The argument's property name on the args object.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>name</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The argument's name.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>optional</code></td>
            

            <td class="type">
            
                
<span class="param-type">boolean</span>


            
            </td>

            

            

            <td class="description last">Whether or not the argument is optional.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>preconditionOptions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;object></span>


            
            </td>

            

            

            <td class="description last">The options to be passed to
preconditions when they're run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">The preconditions to be ran on
the argument.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remainder</code></td>
            

            <td class="type">
            
                
<span class="param-type">boolean</span>


            
            </td>

            

            

            <td class="description last">Whether or not the argument is the remainder.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>typeReader</code></td>
            

            <td class="type">
            
                
<span class="param-type">TypeReader</span>


            
            </td>

            

            

            <td class="description last">The argument's TypeReader.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Argument.js.html">structures/Argument.js</a>, <a href="structures_Argument.js.html#line36">line 36</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">An argument precondition.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#ArgumentPreconditionOptions">ArgumentPreconditionOptions</a></span>


            
            </td>

            

            

            <td class="description last">The argument precondition
options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>name</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's name.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>description</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's description.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line23">line 23</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A command.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#CommandOptions">CommandOptions</a></span>


            
            </td>

            

            

            <td class="description last">The command options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Argument></span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The command's arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>botPermissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The permissions required by the bot to
execute the command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>cooldowns</code></td>
            

            <td class="type">
            
                
<span class="param-type">Cooldown</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                
                </td>
            

            

            <td class="description last">An object of all user cooldowns and cooldown
options on the command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>description</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The command's description.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>group</code></td>
            

            <td class="type">
            
                
<span class="param-type">Group</span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The command's group.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>hasCooldown</code></td>
            

            <td class="type">
            
                
<span class="param-type">boolean</span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">Whether or not the command has a cooldown.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>memberPermissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The permissions required by the invoker
to use the command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>names</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The command's names.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>preconditionOptions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The options to be passed to preconditions
when they're run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The preconditions to be ran on the
command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>postconditionOptions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The options to be passed to postconditions
when they're run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The postconditions to be ran on the
command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>usableContexts</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Symbol></span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">An array of contexts the command can be used
in.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A command.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>
|

<span class="param-type"><a href="global.html#CooldownOptions">CooldownOptions</a></span>


            
            </td>

            

            

            <td class="description last">The cooldown options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>limit</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The amount of uses allowed before a user"s cooldown
resets.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>time</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">The time before a user"s cooldown resets.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>sorter</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                
                </td>
            

            

            <td class="description last">If present, sorts users into different cooldowns by
returning a key to be used for that user when passed user ID, and if
applicable guild ID.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A command group.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#GroupOptions">GroupOptions</a></span>


            
            </td>

            

            

            <td class="description last">The group options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of all commands inside the group.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>description</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The description of the group.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>name</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The name of the group.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>preconditionOptions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            

            

            <td class="description last">The options to be passed to preconditions
when they're run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">The preconditions to be run on all
commands inside the group.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>postconditionOptions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            

            

            <td class="description last">The options to be passed to postconditions
when they're run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">The postconditions to be run on all
commands inside the group.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Group.js.html">structures/Group.js</a>, <a href="structures_Group.js.html#line32">line 32</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">The command handler.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#HandlerOptions">HandlerOptions</a></span>


            
            </td>

            

            

            <td class="description last">The handler options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentRegex</code></td>
            

            <td class="type">
            
                
<span class="param-type">RegExp</span>


            
            </td>

            

            

            <td class="description last">The regex used to parse arguments from
messages.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>registry</code></td>
            

            <td class="type">
            
                
<span class="param-type">Registry</span>


            
            </td>

            

            

            <td class="description last">The registry used to store the commands.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A command postcondition.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#PostconditionOptions">PostconditionOptions</a></span>


            
            </td>

            

            

            <td class="description last">The postconditions options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>name</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The name of the postcondition.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>description</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The description of the postcondition.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line23">line 23</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A command precondition.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#PreconditionOptions">PreconditionOptions</a></span>


            
            </td>

            

            

            <td class="description last">The preconditions options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>name</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The name of the precondition.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>description</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The description of the precondition.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line23">line 23</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A registry containing all commands, groups, preconditions, and type readers.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#RegistryOptions">RegistryOptions</a></span>


            
            </td>

            

            

            <td class="description last">The registry options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondtion></span>


            
            </td>

            

            

            <td class="description last">All registered argument
preconditions.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">All registered commands.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">All registered groups.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>library</code></td>
            

            <td class="type">
            
                
<span class="param-type">Library</span>


            
            </td>

            

            

            <td class="description last">The library being used.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">All registered postconditions.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">All registered preconditions.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">All registered type readers.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">(options)</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A type reader.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">(options)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#TypeReaderOptions">TypeReaderOptions</a></span>


            
            </td>

            

            

            <td class="description last">The type reader options.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>type</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The type reader's type.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>category</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The type reader's category.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>description</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The type reader's description.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line26">line 26</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">()</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A Map of mutexes organized by IDs.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">()</span><span class="type-signature"></span></h4>
    

    















<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line23">line 23</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">()</span><span class="type-signature"></span></h2>
        
            <div class="class-description">A mutex.</div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">()</span><span class="type-signature"></span></h4>
    

    















<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line21">line 21</a>
    </li></ul></dd>
    

    

    

    
</dl>


















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Author"><span class="type-signature">(static) </span>Author<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".BotPermission"><span class="type-signature">(static) </span>BotPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The client lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Channel"><span class="type-signature">(static) </span>Channel<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The channel of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Command"><span class="type-signature">(static) </span>Command<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Cooldown"><span class="type-signature">(static) </span>Cooldown<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A command used while on cooldown.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DiscordJS"><span class="type-signature">(static) </span>DiscordJS<span class="type-signature"> :string</span></h4>




<div class="description">
    The discord.js library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>discord.js</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".DM"><span class="type-signature">(static) </span>DM<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in DMs.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Eris"><span class="type-signature">(static) </span>Eris<span class="type-signature"> :string</span></h4>




<div class="description">
    The eris library
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li>eris</li>
        </ul></dd>
    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Library.js.html">enums/Library.js</a>, <a href="enums_Library.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Exception"><span class="type-signature">(static) </span>Exception<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An exception during command execution.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Global"><span class="type-signature">(static) </span>Global<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Global type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Guild"><span class="type-signature">(static) </span>Guild<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Usable in Guilds.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_Context.js.html">enums/Context.js</a>, <a href="enums_Context.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".HighestRole"><span class="type-signature">(static) </span>HighestRole<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The highest role of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidArgCount"><span class="type-signature">(static) </span>InvalidArgCount<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid amount of arguments provided.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".InvalidContext"><span class="type-signature">(static) </span>InvalidContext<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An invalid context for a command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Library"><span class="type-signature">(static) </span>Library<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    Library-specific type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Member"><span class="type-signature">(static) </span>Member<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The guild member of the author of the command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line33">line 33</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".MemberPermission"><span class="type-signature">(static) </span>MemberPermission<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A member lacking permissions.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line37">line 37</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Message"><span class="type-signature">(static) </span>Message<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    The command message.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_ArgumentDefault.js.html">enums/ArgumentDefault.js</a>, <a href="enums_ArgumentDefault.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".Precondition"><span class="type-signature">(static) </span>Precondition<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A precondition failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line39">line 39</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".TypeReader"><span class="type-signature">(static) </span>TypeReader<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    A type reader failure.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line41">line 41</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".UnknownCmd"><span class="type-signature">(static) </span>UnknownCmd<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    An unknown command.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_CommandError.js.html">enums/CommandError.js</a>, <a href="enums_CommandError.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".User"><span class="type-signature">(static) </span>User<span class="type-signature"> :Symbol</span></h4>




<div class="description">
    User-made type readers.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Symbol</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="enums_TypeReaderCategory.js.html">enums/TypeReaderCategory.js</a>, <a href="enums_TypeReaderCategory.js.html#line29">line 29</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="format"><span class="type-signature"></span>format<span class="signature">(permissions)</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Formats an array of permissions into a list.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line48">line 48</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    A list of the permissions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromBot"><span class="type-signature"></span>fromBot<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed bot permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line75">line 75</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(reason, data)</span><span class="type-signature"> &rarr; {CommandResult}</span></h4>
    

    



<div class="description">
    Returns a failed command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the command's failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">Information to be passed to the postconditions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line56">line 56</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CommandResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, remaining)</span><span class="type-signature"> &rarr; {CooldownResult}</span></h4>
    

    



<div class="description">
    Returns a failed cooldown result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>remaining</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The time remaining on the command cooldown.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CooldownResult.js.html">results/CooldownResult.js</a>, <a href="results_CooldownResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">CooldownResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, error)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns an exception result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>error</code></td>
            

            <td class="type">
            
                
<span class="param-type">Error</span>


            
            </td>

            

            

            <td class="description last">The error in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ExceptionResult.js.html">results/ExceptionResult.js</a>, <a href="results_ExceptionResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, context)</span><span class="type-signature"> &rarr; {InvalidContextResult}</span></h4>
    

    



<div class="description">
    Returns an invalid context result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>context</code></td>
            

            <td class="type">
            
                
<span class="param-type">Symbol</span>


            
            </td>

            

            

            <td class="description last">The invalid context in question.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_InvalidContextResult.js.html">results/InvalidContextResult.js</a>, <a href="results_InvalidContextResult.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">InvalidContextResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason)</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a failed precondition result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The reason for the precondition failure.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line40">line 40</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromError"><span class="type-signature"></span>fromError<span class="signature">(command, reason, matches<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a failed type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>reason</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The reason for the type reader failure.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>matches</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;*></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The type reader matches.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromInvalidCount"><span class="type-signature"></span>fromInvalidCount<span class="signature">(command)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an invalid argument count result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromMember"><span class="type-signature"></span>fromMember<span class="signature">(command, permissions)</span><span class="type-signature"> &rarr; {PermissionResult}</span></h4>
    

    



<div class="description">
    Returns a failed member permissions result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>permissions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">The missing permissions.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PermissionResult.js.html">results/PermissionResult.js</a>, <a href="results_PermissionResult.js.html#line92">line 92</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PermissionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(command, args)</span><span class="type-signature"> &rarr; {ArgumentResult}</span></h4>
    

    



<div class="description">
    Returns a successful argument result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The parsed values from all arguments.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_ArgumentResult.js.html">results/ArgumentResult.js</a>, <a href="results_ArgumentResult.js.html#line61">line 61</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ArgumentResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {PreconditionResult}</span></h4>
    

    



<div class="description">
    Returns a successful precondition result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_PreconditionResult.js.html">results/PreconditionResult.js</a>, <a href="results_PreconditionResult.js.html#line30">line 30</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">PreconditionResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">()</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns a successful result.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_Result.js.html">results/Result.js</a>, <a href="results_Result.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromSuccess"><span class="type-signature"></span>fromSuccess<span class="signature">(value)</span><span class="type-signature"> &rarr; {TypeReaderResult}</span></h4>
    

    



<div class="description">
    Returns a successful type reader result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The parsed value from the type reader.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_TypeReaderResult.js.html">results/TypeReaderResult.js</a>, <a href="results_TypeReaderResult.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">TypeReaderResult</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="fromUnknown"><span class="type-signature"></span>fromUnknown<span class="signature">(commandName)</span><span class="type-signature"> &rarr; {Result}</span></h4>
    

    



<div class="description">
    Returns an unknown command result.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commandName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The unknown command's name.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result in question.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Result</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="get"><span class="type-signature"></span>get<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;?object>}</span></h4>
    

    



<div class="description">
    Gets a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line67">line 67</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves to a valid cooldown object or
undefined.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;?object></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getExample"><span class="type-signature"></span>getExample<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns an example string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line176">line 176</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    An example of usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="getUsage"><span class="type-signature"></span>getUsage<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
    

    



<div class="description">
    Returns a usage string of the command.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The usage of the command.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseArguments"><span class="type-signature">(async) </span>parseArguments<span class="signature">(message, command, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)>}</span></h4>
    

    



<div class="description">
    Attempts to parse Arguments.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line285">line 285</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The
result of the argument parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|PreconditionResult|TypeReaderResult)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="parseCommand"><span class="type-signature">(async) </span>parseCommand<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;Result>}</span></h4>
    

    



<div class="description">
    Attempts to parse a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line65">line 65</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command parsing.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Result></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="read"><span class="type-signature">(async, abstract) </span>read<span class="signature">(command, message, argument, args, input)</span><span class="type-signature"> &rarr; {Promise.&lt;TypeReaderResult>}</span></h4>
    

    



<div class="description">
    Parses the argument's value.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>input</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The user's input.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_TypeReader.js.html">structures/TypeReader.js</a>, <a href="structures_TypeReader.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The type reader's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;TypeReaderResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerArgumentPreconditions"><span class="type-signature"></span>registerArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;ArgumentPrecondition></span>


            
            </td>

            

            

            <td class="description last">An array of argument
preconditions to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line77">line 77</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerCommands"><span class="type-signature"></span>registerCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Command></span>


            
            </td>

            

            

            <td class="description last">An array of commands to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGlobalTypeReaders"><span class="type-signature">(async) </span>registerGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line154">line 154</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerGroups"><span class="type-signature"></span>registerGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Group></span>


            
            </td>

            

            

            <td class="description last">An array of groups to be registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerLibraryTypeReaders"><span class="type-signature">(async) </span>registerLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Promise.&lt;Registry>}</span></h4>
    

    



<div class="description">
    Registers all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line219">line 219</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;Registry></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPostconditions"><span class="type-signature"></span>registerPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Postcondition></span>


            
            </td>

            

            

            <td class="description last">An array of postconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line231">line 231</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerPreconditions"><span class="type-signature"></span>registerPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Precondition></span>


            
            </td>

            

            

            <td class="description last">An array of preconditions to be
registered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line257">line 257</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="registerTypeReaders"><span class="type-signature"></span>registerTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Registers an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;TypeReader></span>


            
            </td>

            

            

            <td class="description last">An array of type readers to register.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line282">line 282</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revert"><span class="type-signature"></span>revert<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Decrements a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line107">line 107</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert the Command"s cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown is reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="revertCooldown"><span class="type-signature">(async) </span>revertCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise}</span></h4>
    

    



<div class="description">
    Attempts to revert a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the cooldown has been reverted.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, argument, args, value, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the argument precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being run.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>argument</code></td>
            

            <td class="type">
            
                
<span class="param-type">Argument</span>


            
            </td>

            

            

            <td class="description last">The argument in question.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The currently resolved arguments.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument's value.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The argument precondition's options.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_ArgumentPrecondition.js.html">structures/ArgumentPrecondition.js</a>, <a href="structures_ArgumentPrecondition.js.html#line52">line 52</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The argument precondition's result.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, args)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Executes the command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>args</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">The arguments of the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line134">line 134</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Resolves once the execution of the
command is complete.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async) </span>run<span class="signature">(message, prefixLength)</span><span class="type-signature"> &rarr; {Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to execute a command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>prefixLength</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The length of the prefix to use when handling
the command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line354">line 354</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
execution.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(ArgumentResult|CooldownResult|PreconditionResult|TypeReaderResult|ExceptionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(message, result<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Executes the postcondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The result of the command execution, if any.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Postcondition.js.html">structures/Postcondition.js</a>, <a href="structures_Postcondition.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="run"><span class="type-signature">(async, abstract) </span>run<span class="signature">(command, message, options)</span><span class="type-signature"> &rarr; {Promise.&lt;PreconditionResult>}</span></h4>
    

    



<div class="description">
    Executes the precondition.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command being executed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The options of the precondition.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Precondition.js.html">structures/Precondition.js</a>, <a href="structures_Precondition.js.html#line47">line 47</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the precondition.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;PreconditionResult></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="runCommandPostconditions"><span class="type-signature">(async) </span>runCommandPostconditions<span class="signature">(message, command, result<span class="signature-attributes">nullable</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Attempts to run the Postconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The parsed command.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>result</code></td>
            

            <td class="type">
            
                
<span class="param-type">CommandResult</span>


            
            </td>

            
                <td class="attributes">
                

                
                    &lt;nullable><br>
                

                
                </td>
            

            

            <td class="description last">The command result.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line149">line 149</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="runCommandPreconditions"><span class="type-signature">(async) </span>runCommandPreconditions<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(PreconditionResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to run the Preconditions registered to a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of running the
preconditions.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(PreconditionResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="setCommand"><span class="type-signature"></span>setCommand<span class="signature">(command)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Sets this result's command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The command this result came from.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="results_CommandResult.js.html">results/CommandResult.js</a>, <a href="results_CommandResult.js.html#line45">line 45</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(id, task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue with the provided ID.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last">The ID of the queue.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_MultiMutex.js.html">utility/MultiMutex.js</a>, <a href="utility_MultiMutex.js.html#line34">line 34</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="sync"><span class="type-signature"></span>sync<span class="signature">(task)</span><span class="type-signature"> &rarr; {Promise.&lt;*>}</span></h4>
    

    



<div class="description">
    Adds a task to the queue.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>task</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">The task to execute.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="utility_Mutex.js.html">utility/Mutex.js</a>, <a href="utility_Mutex.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the task.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;*></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterArgumentPreconditions"><span class="type-signature"></span>unregisterArgumentPreconditions<span class="signature">(argumentPreconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of argument preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>argumentPreconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of argument
precondition names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line308">line 308</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterCommands"><span class="type-signature"></span>unregisterCommands<span class="signature">(commands)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of commands.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>commands</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of command names to unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line535">line 535</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGlobalTypeReaders"><span class="type-signature"></span>unregisterGlobalTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all global type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line352">line 352</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterGroups"><span class="type-signature"></span>unregisterGroups<span class="signature">(groups)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of groups.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>groups</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of group names to be unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line363">line 363</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterLibraryTypeReaders"><span class="type-signature"></span>unregisterLibraryTypeReaders<span class="signature">()</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters all library type readers.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPostconditions"><span class="type-signature"></span>unregisterPostconditions<span class="signature">(postconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of postconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>postconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of postcondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line403">line 403</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterPreconditions"><span class="type-signature"></span>unregisterPreconditions<span class="signature">(preconditions)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of preconditions.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>preconditions</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of precondition names to be
unregistered.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line452">line 452</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="unregisterTypeReaders"><span class="type-signature"></span>unregisterTypeReaders<span class="signature">(typeReaders)</span><span class="type-signature"> &rarr; {Registry}</span></h4>
    

    



<div class="description">
    Unregisters an array of type readers.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>typeReaders</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;string></span>


            
            </td>

            

            

            <td class="description last">An array of type reader names to
unregister.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Registry.js.html">structures/Registry.js</a>, <a href="structures_Registry.js.html#line500">line 500</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The registry being used.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Registry</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;boolean>}</span></h4>
    

    



<div class="description">
    Attempts to update the Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Command.js.html">structures/Command.js</a>, <a href="structures_Command.js.html#line194">line 194</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;boolean></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="updateCooldown"><span class="type-signature">(async) </span>updateCooldown<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(CooldownResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to update a Command's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of checking
the cooldowns.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(CooldownResult|Result)></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="use"><span class="type-signature"></span>use<span class="signature">(userId, guildId<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Increments a user's cooldown.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>userId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last">The user ID.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>guildId</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The guild ID, if applicable.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Cooldown.js.html">structures/Cooldown.js</a>, <a href="structures_Cooldown.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    Returns whether or not the user is on cooldown.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="validateCommand"><span class="type-signature">(async) </span>validateCommand<span class="signature">(message, command)</span><span class="type-signature"> &rarr; {Promise.&lt;(InvalidContextResult|Result)>}</span></h4>
    

    



<div class="description">
    Attempts to validate a Command.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">Message</span>


            
            </td>

            

            

            <td class="description last">The received message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>command</code></td>
            

            <td class="type">
            
                
<span class="param-type">Command</span>


            
            </td>

            

            

            <td class="description last">The parsed command.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="structures_Handler.js.html">structures/Handler.js</a>, <a href="structures_Handler.js.html#line90">line 90</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    The result of the command
validation.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Promise.&lt;(InvalidContextResult|Result)></span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>




</div>

<nav>
    <h2><a href="index.html">Home</a></h2><h3>Classes</h3><ul><li><a href="module.html#.exports">exports</a></li></ul><h3>Global</h3><ul><li><a href="global.html#RequireAll">RequireAll</a></li></ul>
</nav>

<br class="clear">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 3.5.5</a> on Thu Oct 25 2018 03:18:55 GMT+0000 (Coordinated Universal Time)
</footer>

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>